@page "/"
@using System.Text.Json
@using AppMarketplaceBlazorFront.DTOs
@using Microsoft.AspNetCore.WebUtilities
@inject HttpClient httpClient
@inject IJSRuntime JS;

<body>
    <div class="app-market">
        <img class="nice-frame" src="/AllAppsBeutyFrame.jpg" />
        <div class="apps-categories-box">
            <div class="categories-box">
                <div class="category-label">Категории</div>
                @if(_appCategories != null)
                {
                    @for (int i = 0; i < _appCategories.Length; i++)
                    {
                        <div class="checkbox">
                            <input type="checkbox" class="form-check-input" id=@_appCategories[i].CategoryId />
                            <label class="checkbox-text" for=@_appCategories[i].CategoryId>@_appCategories[i].CategoryName</label>
                        </div>
                    }
                }
            </div>
            <div class="app-cards">
                @if(_apps != null)
                {
                    @for (int i = 0; i < _apps.Length; i++)
                    {
                        <a href=@($"app_page/{_apps[i].AppId}")>
                            <div class="app-card">
                                <img class="card-icon" src=@($"https://localhost:7247/api/Apps/GetAppImage?appId={_apps?[i].AppId}") />
                                <div class="upper-card-info"><div class="card-text">@_apps[i].Name</div></div>
                                <div class="lower-card-info">
                                    <img class="devoloper-icon" src=@($"https://localhost:7247/api/Users/GetUserAvatar?userId={_developers?[i].Id}") />
                                    <div class="lower-card-item">
                                        <div class="developer-label">Разработчик</div>
                                        <div class="developer-name">@(_developers != null ? _developers[i].UserName : "")</div>
                                    </div>
                                    <div class="lower-card-item">
                                        <div class="price-label">Цена</div>
                                        <div class="card-text">@(Decimal.Round(_apps[i].Price, 2)) Руб</div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    }
                }
            </div>
        </div>
    </div>
</body>

@code {
    AppCategory[]? _appCategories;
    AppDTO[]? _apps;
    UserDTO[]? _developers = null;

    protected Dictionary<string, string?> _queryParams = new()
    {
        {"userId", "" }
    };

    protected override async Task OnInitializedAsync()
    {
        string categoriesEndpoint = "https://localhost:7247/api/AppCategories/GetAppCategories";
        string appsEndpoint = "https://localhost:7247/api/Apps/GetAllApps";

        _appCategories = await httpClient.GetFromJsonAsync<AppCategory[]?>(categoriesEndpoint);
        _apps = await httpClient.GetFromJsonAsync<AppDTO[]?>(appsEndpoint);

        if(_apps != null)
        {
            string userEndpoint = "https://localhost:7247/api/Users/GetUserById";
            _developers = new UserDTO[_apps.Length];

            for (int i = 0; i < _apps.Length; i++)
            {
                _queryParams["userId"] = _apps[i].DeveloperId;
                string userRequest = QueryHelpers.AddQueryString(userEndpoint, _queryParams);

                UserDTO? developer = await httpClient.GetFromJsonAsync<UserDTO?>(userRequest);
                if(developer != null)
                {
                    _developers[i] = developer;
                }
            }
        }
    }
}
